plugins {
    `java-library`
    id("org.openapi.generator") version("5.0.0")
}

group = "io.github.consolero"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    // Dependencies copied from build.gradle file generated by openApiGenerate.
    implementation("io.swagger:swagger-annotations:1.5.24")
    implementation("com.google.code.findbugs:jsr305:3.0.2")
    implementation("com.squareup.okhttp3:okhttp:3.14.7")
    implementation("com.squareup.okhttp3:logging-interceptor:3.14.7")
    implementation("com.google.code.gson:gson:2.8.6")
    implementation("io.gsonfire:gson-fire:1.8.4")
    implementation("org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:1.0.1")
    implementation("org.apache.commons:commons-lang3:3.10")
    implementation("org.threeten:threetenbp:1.4.3")
    implementation("javax.annotation:javax.annotation-api:1.3.2")
    testImplementation("junit:junit:4.13.1")
}

val genDir = "${project.buildDir}/generated"

openApiGenerate {
    inputSpec.set("${project.rootDir}/src/main/resources/petstore.yaml")
    outputDir.set(genDir)

    generatorName.set("java") // generates a Java client

    val packageName = "io.github.consolero.bootbootboot"
    apiPackage.set(packageName)
    modelPackage.set(packageName)
    invokerPackage.set("${packageName}.impl")
}

sourceSets["main"].java.srcDir(file("${genDir}/src/main/java"))
sourceSets["test"].java.srcDir(file("${genDir}/src/test/java"))

tasks.withType<JavaCompile> {
    dependsOn(tasks.openApiGenerate)
}

tasks.withType<Test> {
    useJUnit()
}
